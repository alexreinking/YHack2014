// Generated from /Users/alexreinking/YHack2014/src/main/java/Command.g4 by ANTLR 4.4.1-dev
package antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CommandLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4.1-dev", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__3=1, T__2=2, T__1=3, T__0=4, Attack=5, Assault=6, Pwn=7, Kill=8, Check=9, 
		Down=10, Drop=11, East=12, Eat=13, Enter=14, Examine=15, Exit=16, Give=17, 
		Go=18, Health=19, Inspect=20, Inventory=21, Leave=22, Look=23, North=24, 
		Open=25, Pick=26, South=27, Status=28, Take=29, Touch=30, Trade=31, Up=32, 
		Walk=33, With=34, West=35, Mercilessly=36, Number=37, Identifier=38, WS=39;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''"
	};
	public static final String[] ruleNames = {
		"T__3", "T__2", "T__1", "T__0", "Attack", "Assault", "Pwn", "Kill", "Check", 
		"Down", "Drop", "East", "Eat", "Enter", "Examine", "Exit", "Give", "Go", 
		"Health", "Inspect", "Inventory", "Leave", "Look", "North", "Open", "Pick", 
		"South", "Status", "Take", "Touch", "Trade", "Up", "Walk", "With", "West", 
		"Mercilessly", "Number", "Identifier", "WS"
	};


	public CommandLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Command.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2)\u013a\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\3\2\3\2\3\2\3\3\3\3"+
		"\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3"+
		"\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n"+
		"\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r"+
		"\3\r\5\r\u008b\n\r\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3"+
		"\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\22\3"+
		"\22\3\22\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3"+
		"\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3"+
		"\26\3\26\3\26\3\26\5\26\u00c5\n\26\3\27\3\27\3\27\3\27\3\27\3\27\3\30"+
		"\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\5\31\u00d8\n\31\3\32"+
		"\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34"+
		"\3\34\5\34\u00ea\n\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36"+
		"\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3!\3!\3!\3"+
		"\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\5$\u0116\n$\3%\3%\3%"+
		"\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3&\3&\7&\u0128\n&\f&\16&\u012b\13&\3"+
		"\'\3\'\7\'\u012f\n\'\f\'\16\'\u0132\13\'\3(\6(\u0135\n(\r(\16(\u0136\3"+
		"(\3(\2\2)\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33"+
		"\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67"+
		"\359\36;\37= ?!A\"C#E$G%I&K\'M(O)\3\2\6\3\2\62;\4\2C\\c|\5\2\62;C\\c|"+
		"\5\2\13\f\17\17\"\"\u0141\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2"+
		"\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2"+
		"\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3"+
		"\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2"+
		"\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67"+
		"\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2"+
		"\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2"+
		"\3Q\3\2\2\2\5T\3\2\2\2\7V\3\2\2\2\tY\3\2\2\2\13]\3\2\2\2\rd\3\2\2\2\17"+
		"l\3\2\2\2\21p\3\2\2\2\23u\3\2\2\2\25{\3\2\2\2\27\u0080\3\2\2\2\31\u008a"+
		"\3\2\2\2\33\u008c\3\2\2\2\35\u0090\3\2\2\2\37\u0096\3\2\2\2!\u009e\3\2"+
		"\2\2#\u00a3\3\2\2\2%\u00a8\3\2\2\2\'\u00ab\3\2\2\2)\u00b2\3\2\2\2+\u00c4"+
		"\3\2\2\2-\u00c6\3\2\2\2/\u00cc\3\2\2\2\61\u00d7\3\2\2\2\63\u00d9\3\2\2"+
		"\2\65\u00de\3\2\2\2\67\u00e9\3\2\2\29\u00eb\3\2\2\2;\u00f2\3\2\2\2=\u00f7"+
		"\3\2\2\2?\u00fd\3\2\2\2A\u0103\3\2\2\2C\u0106\3\2\2\2E\u010b\3\2\2\2G"+
		"\u0115\3\2\2\2I\u0117\3\2\2\2K\u0125\3\2\2\2M\u012c\3\2\2\2O\u0134\3\2"+
		"\2\2QR\7c\2\2RS\7v\2\2S\4\3\2\2\2TU\7c\2\2U\6\3\2\2\2VW\7o\2\2WX\7{\2"+
		"\2X\b\3\2\2\2YZ\7v\2\2Z[\7j\2\2[\\\7g\2\2\\\n\3\2\2\2]^\7c\2\2^_\7v\2"+
		"\2_`\7v\2\2`a\7c\2\2ab\7e\2\2bc\7m\2\2c\f\3\2\2\2de\7c\2\2ef\7u\2\2fg"+
		"\7u\2\2gh\7c\2\2hi\7w\2\2ij\7n\2\2jk\7v\2\2k\16\3\2\2\2lm\7r\2\2mn\7y"+
		"\2\2no\7p\2\2o\20\3\2\2\2pq\7m\2\2qr\7k\2\2rs\7n\2\2st\7n\2\2t\22\3\2"+
		"\2\2uv\7e\2\2vw\7j\2\2wx\7g\2\2xy\7e\2\2yz\7m\2\2z\24\3\2\2\2{|\7f\2\2"+
		"|}\7q\2\2}~\7y\2\2~\177\7p\2\2\177\26\3\2\2\2\u0080\u0081\7f\2\2\u0081"+
		"\u0082\7t\2\2\u0082\u0083\7q\2\2\u0083\u0084\7r\2\2\u0084\30\3\2\2\2\u0085"+
		"\u0086\7g\2\2\u0086\u0087\7c\2\2\u0087\u0088\7u\2\2\u0088\u008b\7v\2\2"+
		"\u0089\u008b\7g\2\2\u008a\u0085\3\2\2\2\u008a\u0089\3\2\2\2\u008b\32\3"+
		"\2\2\2\u008c\u008d\7g\2\2\u008d\u008e\7c\2\2\u008e\u008f\7v\2\2\u008f"+
		"\34\3\2\2\2\u0090\u0091\7g\2\2\u0091\u0092\7p\2\2\u0092\u0093\7v\2\2\u0093"+
		"\u0094\7g\2\2\u0094\u0095\7t\2\2\u0095\36\3\2\2\2\u0096\u0097\7g\2\2\u0097"+
		"\u0098\7z\2\2\u0098\u0099\7c\2\2\u0099\u009a\7o\2\2\u009a\u009b\7k\2\2"+
		"\u009b\u009c\7p\2\2\u009c\u009d\7g\2\2\u009d \3\2\2\2\u009e\u009f\7g\2"+
		"\2\u009f\u00a0\7z\2\2\u00a0\u00a1\7k\2\2\u00a1\u00a2\7v\2\2\u00a2\"\3"+
		"\2\2\2\u00a3\u00a4\7i\2\2\u00a4\u00a5\7k\2\2\u00a5\u00a6\7x\2\2\u00a6"+
		"\u00a7\7g\2\2\u00a7$\3\2\2\2\u00a8\u00a9\7i\2\2\u00a9\u00aa\7q\2\2\u00aa"+
		"&\3\2\2\2\u00ab\u00ac\7j\2\2\u00ac\u00ad\7g\2\2\u00ad\u00ae\7c\2\2\u00ae"+
		"\u00af\7n\2\2\u00af\u00b0\7v\2\2\u00b0\u00b1\7j\2\2\u00b1(\3\2\2\2\u00b2"+
		"\u00b3\7k\2\2\u00b3\u00b4\7p\2\2\u00b4\u00b5\7u\2\2\u00b5\u00b6\7r\2\2"+
		"\u00b6\u00b7\7g\2\2\u00b7\u00b8\7e\2\2\u00b8\u00b9\7v\2\2\u00b9*\3\2\2"+
		"\2\u00ba\u00bb\7k\2\2\u00bb\u00bc\7p\2\2\u00bc\u00bd\7x\2\2\u00bd\u00be"+
		"\7g\2\2\u00be\u00bf\7p\2\2\u00bf\u00c0\7v\2\2\u00c0\u00c1\7q\2\2\u00c1"+
		"\u00c2\7t\2\2\u00c2\u00c5\7{\2\2\u00c3\u00c5\7k\2\2\u00c4\u00ba\3\2\2"+
		"\2\u00c4\u00c3\3\2\2\2\u00c5,\3\2\2\2\u00c6\u00c7\7n\2\2\u00c7\u00c8\7"+
		"g\2\2\u00c8\u00c9\7c\2\2\u00c9\u00ca\7x\2\2\u00ca\u00cb\7g\2\2\u00cb."+
		"\3\2\2\2\u00cc\u00cd\7n\2\2\u00cd\u00ce\7q\2\2\u00ce\u00cf\7q\2\2\u00cf"+
		"\u00d0\7m\2\2\u00d0\60\3\2\2\2\u00d1\u00d2\7p\2\2\u00d2\u00d3\7q\2\2\u00d3"+
		"\u00d4\7t\2\2\u00d4\u00d5\7v\2\2\u00d5\u00d8\7j\2\2\u00d6\u00d8\7p\2\2"+
		"\u00d7\u00d1\3\2\2\2\u00d7\u00d6\3\2\2\2\u00d8\62\3\2\2\2\u00d9\u00da"+
		"\7q\2\2\u00da\u00db\7r\2\2\u00db\u00dc\7g\2\2\u00dc\u00dd\7p\2\2\u00dd"+
		"\64\3\2\2\2\u00de\u00df\7r\2\2\u00df\u00e0\7k\2\2\u00e0\u00e1\7e\2\2\u00e1"+
		"\u00e2\7m\2\2\u00e2\66\3\2\2\2\u00e3\u00e4\7u\2\2\u00e4\u00e5\7q\2\2\u00e5"+
		"\u00e6\7w\2\2\u00e6\u00e7\7v\2\2\u00e7\u00ea\7j\2\2\u00e8\u00ea\7u\2\2"+
		"\u00e9\u00e3\3\2\2\2\u00e9\u00e8\3\2\2\2\u00ea8\3\2\2\2\u00eb\u00ec\7"+
		"u\2\2\u00ec\u00ed\7v\2\2\u00ed\u00ee\7c\2\2\u00ee\u00ef\7v\2\2\u00ef\u00f0"+
		"\7w\2\2\u00f0\u00f1\7u\2\2\u00f1:\3\2\2\2\u00f2\u00f3\7v\2\2\u00f3\u00f4"+
		"\7c\2\2\u00f4\u00f5\7m\2\2\u00f5\u00f6\7g\2\2\u00f6<\3\2\2\2\u00f7\u00f8"+
		"\7v\2\2\u00f8\u00f9\7q\2\2\u00f9\u00fa\7w\2\2\u00fa\u00fb\7e\2\2\u00fb"+
		"\u00fc\7j\2\2\u00fc>\3\2\2\2\u00fd\u00fe\7v\2\2\u00fe\u00ff\7t\2\2\u00ff"+
		"\u0100\7c\2\2\u0100\u0101\7f\2\2\u0101\u0102\7g\2\2\u0102@\3\2\2\2\u0103"+
		"\u0104\7w\2\2\u0104\u0105\7r\2\2\u0105B\3\2\2\2\u0106\u0107\7y\2\2\u0107"+
		"\u0108\7c\2\2\u0108\u0109\7n\2\2\u0109\u010a\7m\2\2\u010aD\3\2\2\2\u010b"+
		"\u010c\7y\2\2\u010c\u010d\7k\2\2\u010d\u010e\7v\2\2\u010e\u010f\7j\2\2"+
		"\u010fF\3\2\2\2\u0110\u0111\7y\2\2\u0111\u0112\7g\2\2\u0112\u0113\7u\2"+
		"\2\u0113\u0116\7v\2\2\u0114\u0116\7y\2\2\u0115\u0110\3\2\2\2\u0115\u0114"+
		"\3\2\2\2\u0116H\3\2\2\2\u0117\u0118\7o\2\2\u0118\u0119\7g\2\2\u0119\u011a"+
		"\7t\2\2\u011a\u011b\7e\2\2\u011b\u011c\7k\2\2\u011c\u011d\7n\2\2\u011d"+
		"\u011e\7g\2\2\u011e\u011f\7u\2\2\u011f\u0120\7u\2\2\u0120\u0121\7n\2\2"+
		"\u0121\u0122\7{\2\2\u0122\u0123\3\2\2\2\u0123\u0124\b%\2\2\u0124J\3\2"+
		"\2\2\u0125\u0129\t\2\2\2\u0126\u0128\t\2\2\2\u0127\u0126\3\2\2\2\u0128"+
		"\u012b\3\2\2\2\u0129\u0127\3\2\2\2\u0129\u012a\3\2\2\2\u012aL\3\2\2\2"+
		"\u012b\u0129\3\2\2\2\u012c\u0130\t\3\2\2\u012d\u012f\t\4\2\2\u012e\u012d"+
		"\3\2\2\2\u012f\u0132\3\2\2\2\u0130\u012e\3\2\2\2\u0130\u0131\3\2\2\2\u0131"+
		"N\3\2\2\2\u0132\u0130\3\2\2\2\u0133\u0135\t\5\2\2\u0134\u0133\3\2\2\2"+
		"\u0135\u0136\3\2\2\2\u0136\u0134\3\2\2\2\u0136\u0137\3\2\2\2\u0137\u0138"+
		"\3\2\2\2\u0138\u0139\b(\2\2\u0139P\3\2\2\2\13\2\u008a\u00c4\u00d7\u00e9"+
		"\u0115\u0129\u0130\u0136\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}